################### GOOGLE TEST ###########################
# function - sync_g_test_framework
# Syncs gtest framework, when project is being configured
function (sync_g_test_framework)
    include(FetchContent)
    FetchContent_Declare(
      googletest
      GIT_REPOSITORY https://github.com/google/googletest.git
      GIT_TAG        v1.10.x
    ) 
    FetchContent_MakeAvailable(googletest)
endfunction(sync_g_test_framework)

# function - add_g_test
# Adds gtest-based unit-test to the build
# param_0 - name of the test. Should be the same, as the name of the *.cpp file, which implements the test
# param_1 ... param_n - libraries, which should be linked to a test
function(add_g_test)
    if (DEFINED ARGV0)
        if(COMMAND cmake_policy)
          cmake_policy(SET CMP0003 NEW)
        endif(COMMAND cmake_policy)

        add_executable(${ARGV0} ${ARGV0}.cpp)
        target_link_libraries(${ARGV0} gtest_main)
        add_test(NAME ${ARGV0} COMMAND ${ARGV0})
        target_include_directories(${ARGV0} PRIVATE ${PROJECT_SOURCE_DIR})
        
        if(ARGC GREATER 1)
            math(EXPR lastIndex "${ARGC}-1")
            foreach(index RANGE 1 ${lastIndex})
                target_link_libraries(${ARGV0} ${ARGV${index}})
            endforeach()
        endif()
    endif()
endfunction(add_g_test)
################### GOOGLE TEST ( END ) ###################

################### DMA_Plantuml ##########################
# function - sync_dma_plantuml
# Syncs dma_plantuml sub-project, when project is being configured
function (sync_dma_plantuml)
    include(FetchContent)
    FetchContent_Declare(
      dma_plantuml
      GIT_REPOSITORY https://github.com/svlad-90/DMA_Plantuml.git
      GIT_TAG        master
    ) 
    FetchContent_MakeAvailable(dma_plantuml)
endfunction(sync_dma_plantuml)
################### DMA_Plantuml ( END ) ###################

################### DMA_Framework ##########################
# function - sync_dma_framework
# Syncs dma_framework sub-project, when project is being configured
function (sync_dma_framework)
    include(FetchContent)
    FetchContent_Declare(
      dma_framework
      GIT_REPOSITORY https://github.com/svlad-90/DMA_Framework.git
      GIT_TAG        master
    ) 
    FetchContent_MakeAvailable(dma_framework)
endfunction(sync_dma_framework)
################### DMA_Framework ( END ) ###################

################### CLANG_TIDY ############################
function(add_subdirectory_with_clang_tidy subdirectory)
    if( DMA_CLANG_TIDY_BUILD )
        message("-- [DMA_Plantuml]: clang-tidy build.")
        set(CMAKE_CXX_CLANG_TIDY "clang-tidy")
        list(APPEND CMAKE_CXX_CLANG_TIDY
        "-format-style='file'"
        "-warnings-as-errors=*" )
    endif()

    add_subdirectory(${subdirectory})
endfunction(add_subdirectory_with_clang_tidy)
################### CLANG_TIDY ( END ) ####################
